---
apiVersion: v1
binaryData:
  ca.crt: ""
kind: ConfigMap
metadata:
  name: capi-ntx-1-pc-trusted-ca-bundle
  namespace: default
---
apiVersion: v1
data:
  .dockerconfigjson: '{"auths":{<redacted>}}'
kind: Secret
metadata:
  name: pull-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  nutanix-ccm.yaml: |
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: nutanix-ccm-pc-trusted-ca-bundle
      namespace: kube-system
    binaryData:
      ca.crt: ""
    ---
    # Source: nutanix-cloud-provider/templates/rbac.yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: cloud-controller-manager
      namespace: kube-system
    ---
    # Source: nutanix-cloud-provider/templates/cm.yaml
    kind: ConfigMap
    apiVersion: v1
    metadata:
      name: nutanix-config
      namespace: kube-system
    data:
      nutanix_config.json: |-
        {
          "prismCentral": {
            "address": "<redacted>",
            "port": 9440,
            "insecure": true,
            "credentialRef": {
              "kind": "secret",
              "name": "nutanix-creds",
              "namespace": "kube-system"
            },
            "additionalTrustBundle": {
              "kind": "ConfigMap",
              "name": "nutanix-ccm-pc-trusted-ca-bundle",
              "namespace": "kube-system"
            }
          },
          "enableCustomLabeling": false,
          "topologyDiscovery": {
            "type": "Prism"
          },
          "ignoredNodeIPs": [
            "10.0.0.5"
          ]
        }
    ---
    # Source: nutanix-cloud-provider/templates/rbac.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      annotations:
        rbac.authorization.kubernetes.io/autoupdate: "true"
      name: system:cloud-controller-manager
    rules:
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
          - update
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - "*"
      - apiGroups:
          - ""
        resources:
          - nodes/status
        verbs:
          - patch
      - apiGroups:
          - ""
        resources:
          - serviceaccounts
        verbs:
          - create
      - apiGroups:
          - ""
        resources:
          - endpoints
        verbs:
          - create
          - get
          - list
          - watch
          - update
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
    ---
    # Source: nutanix-cloud-provider/templates/rbac.yaml
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: system:cloud-controller-manager
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:cloud-controller-manager
    subjects:
      - kind: ServiceAccount
        name: cloud-controller-manager
        namespace: kube-system
    ---
    # Source: nutanix-cloud-provider/templates/cloud-provider-nutanix-deployment.yaml
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        k8s-app: nutanix-cloud-controller-manager
      name: nutanix-cloud-controller-manager
      namespace: kube-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          k8s-app: nutanix-cloud-controller-manager
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            k8s-app: nutanix-cloud-controller-manager
        spec:
          hostNetwork: true
          priorityClassName: system-cluster-critical
          nodeSelector:
            node-role.kubernetes.io/control-plane: ""
          serviceAccountName: cloud-controller-manager
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    k8s-app: nutanix-cloud-controller-manager
                topologyKey: kubernetes.io/hostname
          dnsPolicy: Default
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
              operator: Exists
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoExecute
              key: node.kubernetes.io/unreachable
              operator: Exists
              tolerationSeconds: 120
            - effect: NoExecute
              key: node.kubernetes.io/not-ready
              operator: Exists
              tolerationSeconds: 120
            - effect: NoSchedule
              key: node.cloudprovider.kubernetes.io/uninitialized
              operator: Exists
            - effect: NoSchedule
              key: node.kubernetes.io/not-ready
              operator: Exists
          containers:
            - image: "ghcr.io/nutanix-cloud-native/cloud-provider-nutanix/controller:v0.4.1"
              imagePullPolicy: IfNotPresent
              name: nutanix-cloud-controller-manager
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              args:
                - "--leader-elect=true"
                - "--cloud-config=/etc/cloud/nutanix_config.json"
                - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
              resources:
                requests:
                  cpu: 100m
                  memory: 50Mi
              volumeMounts:
                - mountPath: /etc/cloud
                  name: nutanix-config-volume
                  readOnly: true
          volumes:
            - name: nutanix-config-volume
              configMap:
                name: nutanix-config
kind: ConfigMap
metadata:
  name: nutanix-ccm
  namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  name: capi-ntx-1
  namespace: default
stringData:
  credentials: |
    [
      {
        "type": "basic_auth",
        "data": {
          "prismCentral":{
            "username": "<redacted>",
            "password": "<redacted>"
          }
        }
      }
    ]
---
apiVersion: v1
kind: Secret
metadata:
  name: nutanix-ccm-secret
  namespace: default
stringData:
  nutanix-ccm-secret.yaml: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: nutanix-creds
      namespace: kube-system
    stringData:
      credentials: |
        [
          {
            "type": "basic_auth",
            "data": {
              "prismCentral":{
                "username": "<redacted>",
                "password": "<redacted>"
              },
              "prismElements": null
            }
          }
        ]
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: nutanix-ccm-crs
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      ccm: nutanix
  resources:
    - kind: ConfigMap
      name: nutanix-ccm
    - kind: Secret
      name: nutanix-ccm-secret
    - kind: ConfigMap
      name: nutanix-ccm-pc-trusted-ca-bundle
  strategy: ApplyOnce
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: OpenshiftAssistedConfigTemplate
metadata:
  name: capi-ntx-1-worker
  namespace: default
  labels:
    cluster.x-k8s.io/cluster-name: capi-ntx-1
spec:
  template:
    spec:
      pullSecretRef:
        name: "pull-secret"
      sshAuthorizedKey: "<redacted>"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    ccm: nutanix
    cluster.x-k8s.io/cluster-name: capi-ntx-1
  name: capi-ntx-1
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 172.20.0.0/16
    serviceDomain: local.lab
    services:
      cidrBlocks:
        - 172.19.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: OpenshiftAssistedControlPlane
    name: capi-ntx-1
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: NutanixCluster
    name: capi-ntx-1
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: capi-ntx-1
  name: capi-ntx-1-wmd
  namespace: default
spec:
  clusterName: capi-ntx-1
  replicas: 0
  selector:
    matchLabels: {}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: capi-ntx-1
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
          kind: OpenshiftAssistedConfigTemplate
          name: capi-ntx-1-worker
      clusterName: capi-ntx-1
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        name: capi-ntx-1-mt-0
      version: 4.17.0
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: capi-ntx-1-mhc-control-plane
  namespace: default
spec:
  clusterName: capi-ntx-1
  maxUnhealthy: 40%
  nodeStartupTimeout: 10m0s
  selector:
    matchLabels:
      role: control-plane
  unhealthyConditions:
    - status: "False"
      timeout: 5m0s
      type: Ready
    - status: Unknown
      timeout: 5m0s
      type: Ready
    - status: "True"
      timeout: 5m0s
      type: MemoryPressure
    - status: "True"
      timeout: 5m0s
      type: DiskPressure
    - status: "True"
      timeout: 5m0s
      type: PIDPressure
    - status: "True"
      timeout: 5m0s
      type: NetworkUnavailable
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: OpenshiftAssistedControlPlane
metadata:
  name: capi-ntx-1
  namespace: default
spec:
  openshiftAssistedConfigSpec:
    pullSecretRef:
      name: "pull-secret"
    sshAuthorizedKey: "<redacted>"
    nodeRegistration: {}
  config:
    apiVIPs:
      - 10.0.0.10
    ingressVIPs:
      - 10.0.0.11
    releaseImage: quay.io/openshift-release-dev/ocp-release:4.17.0-x86_64
    baseDomain: local.lab
    pullSecretRef:
      name: "pull-secret"
    sshAuthorizedKey: "<redacted>"
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: NutanixMachineTemplate
      name: capi-ntx-1-mt-0
  replicas: 3
  version: 4.17.0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: NutanixCluster
metadata:
  name: capi-ntx-1
  namespace: default
spec:
  controlPlaneEndpoint:
    host: 10.0.0.5
    port: 6443
  prismCentral:
    additionalTrustBundle:
      kind: ConfigMap
      name: capi-ntx-1-pc-trusted-ca-bundle
    address: <redacted>
    credentialRef:
      kind: Secret
      name: capi-ntx-1
    insecure: true
    port: 9440
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: NutanixMachineTemplate
metadata:
  name: capi-ntx-1-mt-0
  namespace: default
spec:
  template:
    spec:
      bootType: legacy
      cluster:
        name: <redacted>
        type: name
      image:
        name: rhcos-4.17.0-x86_64-nutanix.x86_64.qcow2
        type: name
      memorySize: 24Gi
      providerID: nutanix://capi-ntx-1-m1
      subnet:
        - name: <redacted>
          type: name
      systemDiskSize: 120Gi
      vcpuSockets: 8
      vcpusPerSocket: 2
