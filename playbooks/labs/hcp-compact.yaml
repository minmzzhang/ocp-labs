---
# This playbook installs a lab with Hypershift running on a compact Openshift
#   control plane. The management control plane and the hosted control plane
#   will share the same nodes.
#
# We need to increase the memory on the nodes to host the nested Openshift
#   clusters. Each HostedCluster uses about 4 GiB of memory
#
# Run it with:
#   ap playbooks/labs/hcp-compact.yaml -e lab_name=abc

- name: 'Import compact playbook'
  ansible.builtin.import_playbook: ../base/compact.yml
  vars:
    lab_name: 'hcp'
    lab_node_memory: 32000
    lab_node_disk_data: 60
    start_install: true

- name: 'Import hcp-compact setup playbook'
  ansible.builtin.import_playbook: ../setup/hcp-compact.yaml
  vars:
    lab_name: 'hcp'

- hosts:
    - 'lab'
  gather_facts: false
  vars:
    lab_name: 'hcp'
    lab_path: '/root/labs'
  environment:
    KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/deploy/auth/kubeconfig"
  tasks:
    - name: 'Create hosted cluster deploy directory'
      ansible.builtin.file:
        path: "{{ lab_path }}/{{ lab_name }}/{{ item }}/auth"
        mode: '0750'
        state: 'directory'
      loop:
        - 'hcp1'
        - 'hcp2'

    - name: 'Wait for HostedCluster hcp1 secrets'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc get -n hcp1-hcp1 secret/kubeadmin-password
      register: __hcp_secrets
      until: __hcp_secrets.rc == 0
      retries: 25
      delay: 30

    - name: 'Wait for HostedCluster hcp2 secrets'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc get -n hcp2-hcp2 secret/kubeadmin-password
      register: __hcp_secrets
      until: __hcp_secrets.rc == 0
      retries: 25
      delay: 30

    - name: 'Extract hosted cluster kubeconfig'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc extract -n {{ item }}-{{ item }}
          secret/admin-kubeconfig
          --to={{ lab_path }}/{{ lab_name }}/{{ item }}/auth
          --confirm
        creates: "{{ lab_path }}/{{ lab_name }}/{{ item }}/auth/kubeconfig"
      environment:
        KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/deploy/auth/kubeconfig"
      loop:
        - 'hcp1'
        - 'hcp2'

    - name: 'Extract hosted cluster kubeadmin console password'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc extract -n {{ item }}-{{ item }}
          secret/kubeadmin-password
          --to={{ lab_path }}/{{ lab_name }}/{{ item }}/auth
          --confirm
        creates: "{{ lab_path }}/{{ lab_name }}/{{ item }}/auth/password"
      environment:
        KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/deploy/auth/kubeconfig"
      loop:
        - 'hcp1'
        - 'hcp2'

- hosts:
    - 'lab'
  gather_facts: false
  vars:
    lab_name: 'hcp'
    lab_path: '/root/labs'
    hcp_name: 'hcp1'
    hcp_ingress: '192.168.125.50-192.168.125.50'
  environment:
    KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/auth/kubeconfig"

  tasks:
    - name: 'Wait for OLM'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc get clusteroperator
          operator-lifecycle-manager-catalog
          -o jsonpath='{.status.conditions[?(@.type=="Available")].status}'
      register: __hcp_olm
      until: __hcp_olm.stdout == 'True'
      retries: 25
      delay: 50
      environment:
        KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/auth/kubeconfig"

    - name: 'Install MetalLB'
      ansible.builtin.include_role:
        name: ocp_metallb
      vars:
        ocp_metallb_pool_ips: "{{ hcp_ingress }}"
        ocp_metallb_pool_name: "{{ hcp_name }}-lb-pool"
        ocp_metallb_path: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}"
        ocp_metallb_install: true

    - name: 'Create metallb ingress'
      ansible.builtin.copy:
        dest: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/metallb-ingress.yaml"
        content: |
          ---
          kind: Service
          apiVersion: v1
          metadata:
            annotations:
              metallb.universe.tf/address-pool: {{ hcp_name }}-lb-pool
            name: metallb-ingress
            namespace: openshift-ingress
          spec:
            ports:
              - name: http
                protocol: TCP
                port: 80
                targetPort: 80
              - name: https
                protocol: TCP
                port: 443
                targetPort: 443
            selector:
              ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
            type: LoadBalancer
      notify: 'Create metallb-ingress'
  handlers:
    - name: 'Create metallb-ingress'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc apply -f {{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/metallb-ingress.yaml

- hosts:
    - 'lab'
  gather_facts: false
  vars:
    lab_name: 'hcp'
    lab_path: '/root/labs'
    hcp_name: 'hcp2'
    hcp_ingress: '192.168.125.60-192.168.125.60'
  environment:
    KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/auth/kubeconfig"

  tasks:
    - name: 'Wait for OLM'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc get clusteroperator
          operator-lifecycle-manager-catalog
          -o jsonpath='{.status.conditions[?(@.type=="Available")].status}'
      register: __hcp_olm
      until: __hcp_olm.stdout == 'True'
      retries: 25
      delay: 50
      environment:
        KUBECONFIG: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/auth/kubeconfig"

    - name: 'Install MetalLB'
      ansible.builtin.include_role:
        name: ocp_metallb
      vars:
        ocp_metallb_pool_ips: "{{ hcp_ingress }}"
        ocp_metallb_pool_name: "{{ hcp_name }}-lb-pool"
        ocp_metallb_path: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}"
        ocp_metallb_install: true

    - name: 'Create metallb ingress'
      ansible.builtin.copy:
        dest: "{{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/metallb-ingress.yaml"
        content: |
          ---
          kind: Service
          apiVersion: v1
          metadata:
            annotations:
              metallb.universe.tf/address-pool: {{ hcp_name }}-lb-pool
            name: metallb-ingress
            namespace: openshift-ingress
          spec:
            ports:
              - name: http
                protocol: TCP
                port: 80
                targetPort: 80
              - name: https
                protocol: TCP
                port: 443
                targetPort: 443
            selector:
              ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
            type: LoadBalancer
      notify: 'Create metallb-ingress'
  handlers:
    - name: 'Create metallb-ingress'
      ansible.builtin.command:
        cmd: >
          /usr/local/bin/oc apply -f {{ lab_path }}/{{ lab_name }}/{{ hcp_name }}/metallb-ingress.yaml
