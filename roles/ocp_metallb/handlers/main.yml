---
- name: 'Enable default CatalogSources in OLM'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc patch OperatorHub cluster
      --type json
      -p '[{"op": "add", "path": "/spec/disableAllDefaultSources", "value": false}]'
  listen: 'enable default CatalogSources'

- name: 'Install MetalLB Operator'
  ansible.builtin.command:
    cmd: "/usr/local/bin/oc apply -f {{ ocp_metallb_path }}/metallb-subscription.yaml"
  when: ocp_metallb_install
  listen: 'metallb install'

- name: 'Waiting until the operator is installed'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc -n openshift-operators wait
      --for=jsonpath='{.status.state}'=AtLatestKnown
      subscription/metallb --timeout=300s
  changed_when: false
  failed_when: false
  when: ocp_metallb_install
  listen: 'metallb install'

- name: 'Wait until the network ClusterOperator is available'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc get clusteroperator/network
      -o jsonpath='{.status.conditions[?(@.type=="Available")].status}'
  register: __metallb_network
  until: __metallb_network.stdout == 'True'
  retries: 54
  delay: 50
  changed_when: false
  failed_when: false
  when: ocp_metallb_install and not ansible_check_mode
  listen: 'metallb install'

- name: 'Waiting until speaker pods are ready'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc wait -n openshift-operators
      -l name=metallb
      --for=condition=Ready
      pods --timeout=300s
  changed_when: false
  failed_when: false
  when: ocp_metallb_install
  listen: 'metallb install'

- name: 'Check CRDs'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc get crds metallbs.metallb.io
      l2advertisements.metallb.io
      ipaddresspools.metallb.io
  register: __metallb_crd_metallbs
  until: __metallb_crd_metallbs.rc == 0
  retries: 25
  delay: 30
  changed_when: false
  failed_when: false
  when: ocp_metallb_install
  listen: 'metallb install'

- name: 'Setup MetalLB'
  ansible.builtin.command:
    cmd: "/usr/local/bin/oc apply -f {{ ocp_metallb_path }}/metallb-setup.yaml"
  register: __metallb_setup_cmd
  until: __metallb_setup_cmd.rc == 0
  retries: 10
  delay: 30
  when: ocp_metallb_install
  listen: 'metallb setup'
