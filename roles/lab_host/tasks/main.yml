---
- name: 'Import OS version variables'
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yaml"
  tags:
    - always

- name: 'Setup software repositories'
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    baseurl: "{{ item.baseurl }}"
    description: "{{ item.description | default(item.name) }}"
    enabled: "{{ item.enable | default(true) }}"
    gpgcheck: "{{ item.gpgcheck | default(false) }}"
    skip_if_unavailable: "{{ item.skip_if_unavailable | default(true) }}"
    state: 'present'
  loop: "{{ lab_host_repos }}"
  tags:
    - 'dnf'
    - 'packages'
    - 'yum'

- name: 'Install required packages'
  ansible.builtin.package:
    name: "{{ lab_host_packages }}"
    state: 'present'
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
    - 'dnf'
    - 'packages'
    - 'yum'

- name: 'Install python packes'
  ansible.builtin.pip:
    name: "{{ lab_host_pip_packages }}"
    state: 'present'
  tags:
    - 'pip'
    - 'python'
    - 'packages'

- name: 'Allow HAproxy to listen on TCP port 6443'
  community.general.seport:
    ports: 6443
    proto: 'tcp'
    setype: 'http_port_t'
    state: 'present'

- name: 'Disable firewalld service'
  ansible.builtin.service:
    name: 'firewalld'
    enabled: false
    state: 'stopped'
  notify:
    - 'flush iptables'
    - 'svc restart libvirtd'

- name: 'Configure software'
  ansible.builtin.import_tasks: 'configure.yaml'

- name: 'Install kcli'
  ansible.builtin.import_tasks: 'kcli.yaml'
  tags: ['kcli']

- name: 'Install kind'
  ansible.builtin.import_tasks: 'kind.yaml'
  tags: ['kind']

- name: 'Install helm'
  ansible.builtin.import_tasks: 'helm.yaml'
  tags: ['helm']

- name: 'Configure dnsmasq'
  ansible.builtin.import_tasks: 'dnsmasq.yaml'
  tags: ['dnsmasq']

- name: 'Install openshift tools'
  ansible.builtin.include_tasks: 'oc.yaml'
  loop: "{{ lab_host_ocp_versions }}"
