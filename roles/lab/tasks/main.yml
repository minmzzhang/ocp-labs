---
- name: 'Create labs root directory'
  ansible.builtin.file:
    path: "{{ lab_path }}"
    mode: '0755'
    state: 'directory'

- name: 'Create lab directory tree'
  ansible.builtin.file:
    path: "{{ lab_path }}/{{ item }}"
    mode: '0755'
    state: 'directory'
  ignore_errors: "{{ ansible_check_mode }}"
  loop:
    - "{{ lab_name }}"
    - "{{ lab_name }}/config"
    - "{{ lab_name }}/deploy"

- name: 'Set installation type to ABI'
  ansible.builtin.set_fact:
    lab_abi: True
  check_mode: no
  when: lab_appliance

- name: 'Create install-config.yaml file'
  ansible.builtin.template:
    src: 'install-config.yaml.j2'
    dest: "{{ lab_path }}/{{ lab_name }}/config/install-config.yaml"
    mode: '0644'
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'Create agent-config.yaml file'
  ansible.builtin.template:
    src: 'agent-config.yaml.j2'
    dest: "{{ lab_path }}/{{ lab_name }}/config/agent-config.yaml"
    mode: '0644'
  ignore_errors: "{{ ansible_check_mode }}"
  when: lab_abi

- name: 'Create appliance-config.yaml file'
  ansible.builtin.template:
    src: 'appliance-config.yaml.j2'
    dest: "{{ lab_path }}/{{ lab_name }}/config/appliance-config.yaml"
    mode: '0644'
  ignore_errors: "{{ ansible_check_mode }}"
  when: lab_appliance

- name: 'Create dnsmasq snippet'
  ansible.builtin.include_role:
    name: 'dnsmasq'
    tasks_from: 'extra_conf.yaml'
  vars:
    dnsmasq_conf_snippets:
      - {src: 'dnsmasq-lab.j2', dest: "{{ lab_name }}.conf"}
  tags: ['dnsmasq']

- name: 'Prepare VMs disks'
  ansible.builtin.set_fact:
    __lab_vm_disks:
      - {"size": "{{ lab_node_disk_sys }}", "pool": "{{ lab_node_disk_pool }}"}
      - {"size": "{{ item.disk_data | default(lab_node_disk_data) }}", "pool": "{{ lab_node_disk_pool }}"}
  when: not lab_appliance

- name: 'Prepare VMs disks (appliance)'
  ansible.builtin.set_fact:
    __lab_vm_disks: []
  when: lab_appliance

- name: 'Create virtual machines'
  karmab.kcli.kcli_vm:
    name: "{{ lab_name }}-{{ item.role | default(lab_node_role) }}-{{ ansible_loop.index }}"
    state: 'present'
    parameters:
      start: false
      uefi_legacy: true
      plan: "{{ lab_name }}"
      memory: "{{ item.memory | default(lab_node_memory) }}"
      numcpus: "{{ item.cpus | default(lab_node_cpus) }}"
      disks: "{{ __lab_vm_disks }}"
      nets:
        - {"name": "{{ lab_network_name }}", "mac": "{{ item.mac | default('{}{}'.format(lab_mac_base, item.id)) }}"}
  loop: "{{ lab_hosts }}"
  loop_control:
    extended: true
