---
- name: 'Install Local Storage Operator'
  ansible.builtin.command:
    cmd: "/usr/local/bin/oc apply -f {{ ocp_localstorage_path }}/localstorage-subscription.yaml"
  when: ocp_localstorage_install
  listen:
    - 'localstorage install'

- name: 'Waiting until the operator is installed'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc -n {{ ocp_localstorage_ns }} wait
      --for=jsonpath='{.status.state}'=AtLatestKnown
      subscription/local-storage-operator --timeout=300s
  changed_when: false
  failed_when: false
  when: ocp_localstorage_install
  listen:
    - 'localstorage install'

- name: 'Waiting until local-storage pods are ready'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc wait -n {{ ocp_localstorage_ns }}
      -l name=local-storage-operator
      --for=condition=Ready
      pods --timeout=300s
  changed_when: false
  failed_when: false
  when: ocp_localstorage_install
  listen:
    - 'localstorage install'

- name: 'Label Openshift nodes'
  ansible.builtin.command:
    cmd: "/usr/local/bin/oc label node {{ item.name }} {{ item.label }}=''"
  loop: "{{ ocp_localstorage_nodes }}"
  when: ocp_localstorage_install
  listen:
    - 'localstorage install'

- name: 'Create Local Storage volumes'
  ansible.builtin.command:
    cmd: "/usr/local/bin/oc apply -f {{ ocp_localstorage_path }}/localvolume-{{ item.name }}.yaml"
  loop: "{{ ocp_localstorage_volumes }}"
  retries: 10
  delay: 30
  when: ocp_localstorage_install
  listen:
    - 'localstorage install'

- name: 'Create Local Storage VolumeSets'
  ansible.builtin.command:
    cmd: "/usr/local/bin/oc apply -f {{ ocp_localstorage_path }}/localvolumeset-{{ item.name }}.yaml"
  loop: "{{ ocp_localstorage_volumesets }}"
  when: ocp_localstorage_install
  listen:
    - 'localstorage install'

- name: 'Set default StorageClass'
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/oc patch
      storageclass/localblock
      -p '{"metadata": {"annotations": {"storageclass.kubernetes.io/is-default-class": "true"}}}'
  loop: "{{ ocp_localstorage_volumesets }}"
  when: ocp_localstorage_install and item.sc_default | default(False)
  listen:
    - 'localstorage install'
